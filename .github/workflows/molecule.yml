---
#
# Ansible managed
#

name: Ansible Molecule

on:
  # Schedule updates (once daily)
  schedule:
    - cron: '37 19 * * *'
  # Lines below let you run workflow manually and on each commit
  workflow_dispatch:
  push: {branches: ["master", "main"]}

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          path: "${{ github.repository }}"
      - name: molecule
        uses: buluma/molecule-action@v4.0.6
        with:
          command: lint
  test:
    needs:
      - lint
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        config:
          - image: "alpine-openrc"
            tag: "latest"
          - image: "amazonlinux"
            tag: "latest"
          - image: "centos-systemd"
            tag: "7"
          - image: "debian-systemd"
            tag: "latest"
          - image: "debian-systemd"
            tag: "bookworm"
          - image: "fedora-systemd"
            tag: "34"
          - image: "fedora-systemd"
            tag: "latest"
          - image: "fedora-systemd"
            tag: "rawhide"
          - image: "opensuse"
            tag: "latest"
          - image: "docker-ubuntu-systemd"
            tag: "latest"
          - image: "docker-ubuntu-systemd"
            tag: "bionic"
    steps:
      - name: checkout
        uses: actions/checkout@v2.4.0
        with:
          path: "${{ github.repository }}"
      - name: disable apparmor for mysql
        run: sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
      - name: parse apparmor for mysql
        run: sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld
      - name: molecule
        uses: buluma/molecule-action@v4.0.6
        with:
          image: ${{ matrix.config.image }}
          tag: ${{ matrix.config.tag }}
      - name: Slack Notification
        uses: act10ns/slack@v1
        with:
          status: "${{ job.status }}"
          steps: "${{ toJson(steps) }}"
          channel: "#ansible"
        if: always()
